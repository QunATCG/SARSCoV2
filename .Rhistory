# set working env
rm(list = ls())
# set your working path
setwd("/Users/liqun/Desktop/Projects/Covid19/Data/Code/SARSCoV2/")
# check your working path
dirNow <- getwd()
### load libraries
library(ggplot2)
library(pheatmap)
### function def
{
keepOverExp <- function(dat, cutoff){
res <- dat[which(rowMeans(dat[,c("Mock_1_FPKM", "Mock_2_FPKM", "Mock_3_FPKM")]) >=cutoff |
rowMeans(dat[,c("T_1_FPKM", "T_2_FPKM", "T_3_FPKM")]) >=cutoff |
rowMeans(dat[,c("NT_1_FPKM", "NT_2_FPKM", "NT_3_FPKM")]) >=cutoff),]
}
keepOverReadCount <- function(dat, cutoff, tagItem){
if(tagItem == "star_total"){
res <- dat[which(rowSums(dat[,c("Mock_1_ReadCount", "Mock_2_ReadCount", "Mock_3_ReadCount")] >= cutoff ) >= 3 |
rowSums(dat[,c("NT_1_ReadCount", "NT_2_ReadCount", "NT_3_ReadCount")] >= cutoff ) >= 3 |
rowSums(dat[,c("T_1_ReadCount", "T_2_ReadCount", "T_3_ReadCount")] >= cutoff ) >= 3),]
}
if(tagItem == "star_covid19"){
res <- dat[which(rowSums(dat[,c("Mock_1_ExpectedCount", "Mock_2_ExpectedCount", "Mock_3_ExpectedCount")] >= cutoff ) >= 3 |
rowSums(dat[,c("NT_1_ExpectedCount", "NT_2_ExpectedCount", "NT_3_ExpectedCount")] >= cutoff ) >= 3 |
rowSums(dat[,c("T_1_ExpectedCount", "T_2_ExpectedCount", "T_3_ExpectedCount")] >= cutoff ) >= 3),]
}
if(tagItem == "hisat2_total"){
res <- dat[which(rowSums(dat[,c("Mock_1_ReadCount", "Mock_2_ReadCount", "Mock_3_ReadCount")] >= cutoff ) >= 3 |
rowSums(dat[,c("NT_1_ReadCount", "NT_2_ReadCount", "NT_3_ReadCount")] >= cutoff ) >= 3 |
rowSums(dat[,c("T_1_ReadCount", "T_2_ReadCount", "T_3_ReadCount")] >= cutoff ) >= 3),]
}
if(tagItem == "hisat2_covid19"){
res <- dat[which(rowSums(dat[,c("Mock_1_ReadCount", "Mock_2_ReadCount", "Mock_3_ReadCount")] >= cutoff ) >= 3 |
rowSums(dat[,c("NT_1_ReadCount", "NT_2_ReadCount", "NT_3_ReadCount")] >= cutoff ) >= 3 |
rowSums(dat[,c("T_1_ReadCount", "T_2_ReadCount", "T_3_ReadCount")] >= cutoff ) >= 3),]
}
return(res)
}
}
### load data
### calculate covid19 readcounts
### hisat2
{
countsData <- read.table("./Data/ExpRNAseq/Hisat2/Hisat2_exp_total.txt", header = T, sep = "\t")[,c("Ensembl", "Gene",
"Mock_1_ReadCount", "Mock_2_ReadCount", "Mock_3_ReadCount", "NT_1_ReadCount", "NT_2_ReadCount",
"NT_3_ReadCount", "T_1_ReadCount", "T_2_ReadCount", "T_3_ReadCount")]
totalReadCounts <- colSums(countsData[,c("Mock_1_ReadCount", "Mock_2_ReadCount", "Mock_3_ReadCount", "NT_1_ReadCount", "NT_2_ReadCount",
"NT_3_ReadCount", "T_1_ReadCount", "T_2_ReadCount", "T_3_ReadCount")])
covidReadCounts <- colSums(countsData[c(57050:57061),c("Mock_1_ReadCount", "Mock_2_ReadCount", "Mock_3_ReadCount", "NT_1_ReadCount", "NT_2_ReadCount",
"NT_3_ReadCount", "T_1_ReadCount", "T_2_ReadCount", "T_3_ReadCount")])
covidReadCountsPercent <- covidReadCounts/totalReadCounts
covidReadCountsPercentDataFrame1 <- data.frame(sample = rep(c("Mock", "NT", "T"), each = 3), value = covidReadCountsPercent)
}
pbar_covidReadCountsPercent <- ggplot(covidReadCountsPercentDataFrame1,aes(sample,value))  +
stat_summary(mapping=aes(fill = sample),fun=mean,geom = "bar",fun.args = list(mult=1),width=0.7)+
stat_summary(fun.data=mean_sdl,fun.args = list(mult=1),geom="errorbar",width=0.2)+
labs(x = "",y = "Read Counts (%)")+
scale_y_continuous(expand = c(0,0),limits = c(0,1))+
theme_classic()+
theme(panel.background=element_rect(fill="white",colour="black",size=0.25),
axis.line=element_line(colour="black",size=0.25),
axis.title=element_text(size=13,color="black"),
axis.text = element_text(size=12,color="black"),
legend.position="none")
mean(covidReadCountsPercentDataFrame1$value[4:6])
mean(covidReadCountsPercentDataFrame1$value[7:9])
NTMean <- mean(covidReadCountsPercentDataFrame1$value[4:6])
TMean <- mean(covidReadCountsPercentDataFrame1$value[7:9])
pbar_covidReadCountsPercent <- ggplot(covidReadCountsPercentDataFrame1,aes(sample,value))  +
stat_summary(mapping=aes(fill = sample),fun=mean,geom = "bar",fun.args = list(mult=1),width=0.7)+
stat_summary(fun.data=mean_sdl,fun.args = list(mult=1),geom="errorbar",width=0.2)+
annotate("text", x=6, y=10, label= "hello") +
labs(x = "",y = "Read Counts (%)")+
scale_y_continuous(expand = c(0,0),limits = c(0,1))+
theme_classic()+
theme(panel.background=element_rect(fill="white",colour="black",size=0.25),
axis.line=element_line(colour="black",size=0.25),
axis.title=element_text(size=13,color="black"),
axis.text = element_text(size=12,color="black"),
legend.position="none")
pbar_covidReadCountsPercent
pbar_covidReadCountsPercent <- ggplot(covidReadCountsPercentDataFrame1,aes(sample,value))  +
stat_summary(mapping=aes(fill = sample),fun=mean,geom = "bar",fun.args = list(mult=1),width=0.7)+
stat_summary(fun.data=mean_sdl,fun.args = list(mult=1),geom="errorbar",width=0.2)+
annotate("text", x=6, y=0.8, label= "hello") +
labs(x = "",y = "Read Counts (%)")+
scale_y_continuous(expand = c(0,0),limits = c(0,1))+
theme_classic()+
theme(panel.background=element_rect(fill="white",colour="black",size=0.25),
axis.line=element_line(colour="black",size=0.25),
axis.title=element_text(size=13,color="black"),
axis.text = element_text(size=12,color="black"),
legend.position="none")
pbar_covidReadCountsPercent
pbar_covidReadCountsPercent <- ggplot(covidReadCountsPercentDataFrame1,aes(sample,value))  +
stat_summary(mapping=aes(fill = sample),fun=mean,geom = "bar",fun.args = list(mult=1),width=0.7)+
stat_summary(fun.data=mean_sdl,fun.args = list(mult=1),geom="errorbar",width=0.2)+
annotate("text", x=2, y=0.8, label= "hello") +
labs(x = "",y = "Read Counts (%)")+
scale_y_continuous(expand = c(0,0),limits = c(0,1))+
theme_classic()+
theme(panel.background=element_rect(fill="white",colour="black",size=0.25),
axis.line=element_line(colour="black",size=0.25),
axis.title=element_text(size=13,color="black"),
axis.text = element_text(size=12,color="black"),
legend.position="none")
pbar_covidReadCountsPercent
pbar_covidReadCountsPercent <- ggplot(covidReadCountsPercentDataFrame1,aes(sample,value))  +
stat_summary(mapping=aes(fill = sample),fun=mean,geom = "bar",fun.args = list(mult=1),width=0.7)+
stat_summary(fun.data=mean_sdl,fun.args = list(mult=1),geom="errorbar",width=0.2)+
annotate("text", x=2, y= 0.9, label= "hello") +
labs(x = "",y = "Read Counts (%)")+
scale_y_continuous(expand = c(0,0),limits = c(0,1))+
theme_classic()+
theme(panel.background=element_rect(fill="white",colour="black",size=0.25),
axis.line=element_line(colour="black",size=0.25),
axis.title=element_text(size=13,color="black"),
axis.text = element_text(size=12,color="black"),
legend.position="none")
pbar_covidReadCountsPercent
pbar_covidReadCountsPercent <- ggplot(covidReadCountsPercentDataFrame1,aes(sample,value))  +
stat_summary(mapping=aes(fill = sample),fun=mean,geom = "bar",fun.args = list(mult=1),width=0.7)+
stat_summary(fun.data=mean_sdl,fun.args = list(mult=1),geom="errorbar",width=0.2)+
annotate("text", x=2, y= 0.9, label= Paste("Average",NTMean,sep=":")) +
labs(x = "",y = "Read Counts (%)")+
scale_y_continuous(expand = c(0,0),limits = c(0,1))+
theme_classic()+
theme(panel.background=element_rect(fill="white",colour="black",size=0.25),
axis.line=element_line(colour="black",size=0.25),
axis.title=element_text(size=13,color="black"),
axis.text = element_text(size=12,color="black"),
legend.position="none")
pbar_covidReadCountsPercent <- ggplot(covidReadCountsPercentDataFrame1,aes(sample,value))  +
stat_summary(mapping=aes(fill = sample),fun=mean,geom = "bar",fun.args = list(mult=1),width=0.7)+
stat_summary(fun.data=mean_sdl,fun.args = list(mult=1),geom="errorbar",width=0.2)+
annotate("text", x=2, y= 0.9, label= paste("Average",NTMean,sep=":")) +
labs(x = "",y = "Read Counts (%)")+
scale_y_continuous(expand = c(0,0),limits = c(0,1))+
theme_classic()+
theme(panel.background=element_rect(fill="white",colour="black",size=0.25),
axis.line=element_line(colour="black",size=0.25),
axis.title=element_text(size=13,color="black"),
axis.text = element_text(size=12,color="black"),
legend.position="none")
pbar_covidReadCountsPercent
pbar_covidReadCountsPercent <- ggplot(covidReadCountsPercentDataFrame1,aes(sample,value))  +
stat_summary(mapping=aes(fill = sample),fun=mean,geom = "bar",fun.args = list(mult=1),width=0.7)+
stat_summary(fun.data=mean_sdl,fun.args = list(mult=1),geom="errorbar",width=0.2)+
annotate("text", x=2, y= 0.9, label= paste("Average",round(NTMean,2),sep=":")) +
labs(x = "",y = "Read Counts (%)")+
scale_y_continuous(expand = c(0,0),limits = c(0,1))+
theme_classic()+
theme(panel.background=element_rect(fill="white",colour="black",size=0.25),
axis.line=element_line(colour="black",size=0.25),
axis.title=element_text(size=13,color="black"),
axis.text = element_text(size=12,color="black"),
legend.position="none")
pbar_covidReadCountsPercent
pbar_covidReadCountsPercent <- ggplot(covidReadCountsPercentDataFrame1,aes(sample,value))  +
stat_summary(mapping=aes(fill = sample),fun=mean,geom = "bar",fun.args = list(mult=1),width=0.7)+
stat_summary(fun.data=mean_sdl,fun.args = list(mult=1),geom="errorbar",width=0.2)+
annotate("text", x=2, y= 0.9, label= paste("Average",round(NTMean,2),sep=":")) +
annotate("text", x=3, y= 0.9, label= paste("Average",round(TMean,2),sep=":")) +
labs(x = "",y = "Read Counts (%)")+
scale_y_continuous(expand = c(0,0),limits = c(0,1))+
theme_classic()+
theme(panel.background=element_rect(fill="white",colour="black",size=0.25),
axis.line=element_line(colour="black",size=0.25),
axis.title=element_text(size=13,color="black"),
axis.text = element_text(size=12,color="black"),
legend.position="none")
pbar_covidReadCountsPercent
t.test(covidReadCountsPercentDataFrame1[4:9,]$sample~covidReadCountsPercentDataFrame1[4:9,]$value)
covidReadCountsPercentDataFrame1[4:9,]
t.test(covidReadCountsPercentDataFrame1$value[4:6], covidReadCountsPercentDataFrame1$value[7:9])
### star
{
countsData_total <- read.table("./Data/ExpRNAseq/STAR/Star_exp_total.txt", header = T, sep = "\t")[,c("Ensembl", "Gene",
"Mock_1_ExpectedCount", "Mock_2_ExpectedCount", "Mock_3_ExpectedCount", "NT_1_ExpectedCount", "NT_2_ExpectedCount",
"NT_3_ExpectedCount", "T_1_ExpectedCount", "T_2_ExpectedCount", "T_3_ExpectedCount")]
countsData_covid <- read.table("./Data/ExpRNAseq/STAR/Star_exp_Covid19.txt", header = T, sep = "\t")[,c("Ensembl", "Gene",
"Mock_1_ExpectedCount", "Mock_2_ExpectedCount", "Mock_3_ExpectedCount", "NT_1_ExpectedCount", "NT_2_ExpectedCount",
"NT_3_ExpectedCount", "T_1_ExpectedCount", "T_2_ExpectedCount", "T_3_ExpectedCount")]
countsData <- rbind(countsData_total, countsData_covid)
totalReadCounts <- colSums(countsData[,c("Mock_1_ExpectedCount", "Mock_2_ExpectedCount", "Mock_3_ExpectedCount", "NT_1_ExpectedCount", "NT_2_ExpectedCount",
"NT_3_ExpectedCount", "T_1_ExpectedCount", "T_2_ExpectedCount", "T_3_ExpectedCount")])
covidReadCounts <- colSums(countsData[c(62755:62766),c("Mock_1_ExpectedCount", "Mock_2_ExpectedCount", "Mock_3_ExpectedCount", "NT_1_ExpectedCount", "NT_2_ExpectedCount",
"NT_3_ExpectedCount", "T_1_ExpectedCount", "T_2_ExpectedCount", "T_3_ExpectedCount")])
covidReadCountsPercent <- covidReadCounts/totalReadCounts
covidReadCountsPercentDataFrame2 <- data.frame(sample = rep(c("Mock", "NT", "T"), each = 3), value = covidReadCountsPercent)
}
t.test(covidReadCountsPercentDataFrame2$value[4:6], covidReadCountsPercentDataFrame2$value[7:9])
t.test(covidReadCountsPercentDataFrame1$value[4:6], covidReadCountsPercentDataFrame1$value[7:9])
t.test(covidReadCountsPercentDataFrame1$value[4:6], covidReadCountsPercentDataFrame1$value[7:9])$pvalue
t.test(covidReadCountsPercentDataFrame1$value[4:6], covidReadCountsPercentDataFrame1$value[7:9])$p-value
kk <- t.test(covidReadCountsPercentDataFrame1$value[4:6], covidReadCountsPercentDataFrame1$value[7:9])
View(covidReadCountsPercentDataFrame2)
View(kk)
kk$p.value
pvalueNT_T <- t.test(covidReadCountsPercentDataFrame1$value[4:6], covidReadCountsPercentDataFrame1$value[7:9])$p.value
pbar_covidReadCountsPercent <- ggplot(covidReadCountsPercentDataFrame1,aes(sample,value))  +
stat_summary(mapping=aes(fill = sample),fun=mean,geom = "bar",fun.args = list(mult=1),width=0.7)+
stat_summary(fun.data=mean_sdl,fun.args = list(mult=1),geom="errorbar",width=0.2)+
annotate("text", x=2, y= 0.9, label= paste("Average",round(NTMean,2),sep=":")) +
annotate("text", x=3, y= 0.9, label= paste("Average",round(TMean,2),sep=":")) +
stat_compare_means(comparisions = myComparision) +
labs(x = "",y = "Read Counts (%)")+
scale_y_continuous(expand = c(0,0),limits = c(0,1))+
theme_classic()+
theme(panel.background=element_rect(fill="white",colour="black",size=0.25),
axis.line=element_line(colour="black",size=0.25),
axis.title=element_text(size=13,color="black"),
axis.text = element_text(size=12,color="black"),
legend.position="none")
library(ggpubr)
